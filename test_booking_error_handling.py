#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —á–∞—Ç–µ
"""

import asyncio
import json
from interactive_chat import InteractiveMCPChat


async def test_booking_error_handling():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏"""
    print("üß™ === –¢–ï–°–¢ –û–ë–†–ê–ë–û–¢–ö–ò –û–®–ò–ë–û–ö –ë–†–û–ù–ò–†–û–í–ê–ù–ò–Ø ===")
    print()
    
    chat = InteractiveMCPChat()
    
    try:
        # –ó–∞–ø—É—Å–∫ MCP —Å–µ—Ä–≤–µ—Ä–∞
        await chat.mcp_client.start_server()
        await chat.mcp_client.initialize()
        
        print("‚úÖ MCP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω")
        print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–∫–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        print("üîß –¢–ï–°–¢: –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–π —Å–ª–æ—Ç")
        mock_response_with_tool_call = """–î–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏ –≤–æ—Å–ø–æ–ª—å–∑—É—é—Å—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º:

[TOOL_CALL:schedule_meeting:{"date":"2024-01-15","time":"13:00","title":"–¢–µ—Å—Ç–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞"}]

–í—Å—Ç—Ä–µ—á–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞!"""
        
        print("üìù –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏ —Å –≤—ã–∑–æ–≤–æ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞:")
        print(f"   {mock_response_with_tool_call}")
        print()
        
        print("üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç (–≤–∫–ª—é—á–∞—è –≤—ã–∑–æ–≤ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞):")
        processed_response = await chat.process_llm_response(mock_response_with_tool_call)
        
        print("üìã –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–í–ï–¢:")
        print(f"   {processed_response}")
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
        if '"success": false' in processed_response:
            print("‚úÖ –û–¢–õ–ò–ß–ù–û: –û—Ç–≤–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
        else:
            print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –û—Ç–≤–µ—Ç –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
        
        if 'available_alternatives' in processed_response:
            print("‚úÖ –û–¢–õ–ò–ß–ù–û: –û—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã")
        else:
            print("‚ùå –ü–†–û–ë–õ–ï–ú–ê: –û—Ç–≤–µ—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
    finally:
        await chat.mcp_client.stop_server()


if __name__ == "__main__":
    asyncio.run(test_booking_error_handling()) 